package golang

const (
	defineTemplate = `// Code generated by https://github.com/meerkat-io/disorder; DO NOT EDIT.
package {{PackageName .Package}}
{{- if .DefineImports}}

import (
{{- range .DefineImports}}
	"{{.}}"
{{- end}}
)
{{- end}}
{{- range $i, $enum := .Enums}}

type {{PascalCase $enum.Name}} string

const (
{{- range .Values}}
	{{PascalCase $enum.Name}}{{PascalCase .}} = {{PascalCase $enum.Name}}("{{.}}")
{{- end}}
)

var {{CamelCase $enum.Name}}EnumMap = map[string]Color {
{{- range .Values}}
	"{{.}}":{{PascalCase $enum.Name}}{{PascalCase .}},
{{- end}}
}

func (*{{PascalCase $enum.Name}}) Enum() {}

func (enum *{{PascalCase $enum.Name}}) Decode(value string) error {
	if {{CamelCase $enum.Name}}, ok := {{CamelCase $enum.Name}}EnumMap[value]; ok {
		*enum = {{CamelCase $enum.Name}}
		return nil
	}
	return fmt.Errorf("invalid enum value")
}

func (enum *{{PascalCase $enum.Name}}) Encode() (string, error) {
	if _, ok := {{CamelCase $enum.Name}}EnumMap[string(*enum)]; ok {
		return string(*enum), nil
	}
	return "", fmt.Errorf("invalid enum value")
}
{{- end}}
{{- range .Messages}}

type {{PascalCase .Name}} struct {
	{{- range .Fields}}
	{{PascalCase .Name}} {{Type .Type}} {{Tag .Type .Name}}
	{{- end}}
}
{{- end}}`
)
