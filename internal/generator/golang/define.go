package golang

const (
	goTemplate = `// Code generated by https://github.com/meerkat-lib/disorder; DO NOT EDIT.
package {{PackageName .Package}}
{{- if .ResolvedImports}}

import (
{{- range .ResolvedImports}}
	"{{.}}"
{{- end}}
)
{{- end}}
{{- range $index, $enum := .Enums}}

type {{PascalCase $enum.Name}} int

const (
{{- range $i, $v := .Values}}
	{{PascalCase $enum.Name}}{{PascalCase .}} {{if eq $i 0}}{{PascalCase $enum.Name}} = iota{{end}}
{{- end}}
)

func (*{{PascalCase $enum.Name}}) Enum() {}

func (enum *{{PascalCase $enum.Name}}) FromString(value string) error {
	switch {
{{- range .Values}}
	case value == "{{.}}":
		*enum = {{PascalCase $enum.Name}}{{PascalCase .}}
		return nil
{{- end}}
	}
	return fmt.Errorf("invalid enum value")
}

func (enum *{{PascalCase $enum.Name}}) ToString() (string, error) {
	switch *enum {
{{- range .Values}}
	case {{PascalCase $enum.Name}}{{PascalCase .}}:
		return "{{.}}", nil
{{- end}}
	default:
		return "", fmt.Errorf("invalid enum value")
	}
}
{{- end}}
{{- range .Messages}}

type {{PascalCase .Name}} struct {
	{{- range .Fields}}
	{{PascalCase .Name}} {{Type .Type}} {{Tag .Name}}
	{{- end}}
}
{{- end}}`
)
